name: auto build

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - README.md
      - LICENSE
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23]
    outputs:
      current_time: ${{ steps.current_time.outputs.current_time }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Get current time
        id: current_time
        run: echo "current_time=$(date +%Y-%m-%d)" >> "$GITHUB_OUTPUT"

      - name: Build
        run: pnpm run build

      - name: ls .output
        run: ls -la . && ls -la .output

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          path: .output/*
          if-no-files-found: error
          compression-level: 9

  release:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write
      discussions: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: .output
      - name: ls .output
        run: ls -la .output/*

      - name: tar .output
        run: tar -zcvf release.tgz .output

      - name: Release
        uses: softprops/action-gh-release@v2.0.4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: release.tgz

      - name: Prerelease
        uses: softprops/action-gh-release@v2.0.4
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          name: ${{needs.build.outputs.current_time}}
          tag_name: ${{needs.build.outputs.current_time}}
          fail_on_unmatched_files: true
          # prerelease: true
          files: release.tgz

  deploy:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.SSH_PATH }}
            rm -rf old_output
            mv .output old_output
            wget https://github.com/Ocyss/QBlog/releases/latest/download/release.tgz -O output.tgz
            tar -zxvf output.tgz
